
TS_DATA_FILE = "data/genes_868.tsv"
TIMEOUT = 259200 # 3 days
MAX_ITER = 100000
N_CHAINS = 4

rule all:
    input:
        "predictions.genie"

rule to_genie:
    input:
        "predictions.json",
        "data/gene_names.json"
    output:
        "predictions.genie"
    shell:
        "python ../scripts/json_to_genie.py {input} {output}"


rule postprocess_ssps:
    input:
        pp="../scripts/postprocess_samples.jl",
        raw=expand("chain_{chain}.json", chain=range(N_CHAINS))
    output:
        out="predictions.json"
    resources:
        runtime=3600,
        threads=1,
        mem_mb=6000
    shell:
        "julia --project=../SSPS/ {input.pp} --chain-samples {input.raw}  --output-file {output.out}"


rule run_ssps:
    input:
        ts="data/prepped_timeseries.tsv",
        prior="data/prior.csv"
    output:
        "chain_{chain}.json"
    shell:
        "julia --project=../SSPS/ ../SSPS/ssps_wrapper.jl {input.ts} {input.prior} {output} {TIMEOUT}"\
        +" --regression-deg 1 --n-steps {MAX_ITER}"\
        +" --lambda-prop-std 3.0 --large-indeg 15.0"


rule preprocess:
    input:
        TS_DATA_FILE 
    output:
        ts="data/prepped_timeseries.tsv",
        names="data/gene_names.json"
    shell:
        "python prep_gene_expr.py {input} {output.ts} {output.names}"


rule make_prior:
    input:
        "data/gene_names.json"
    output:
        "data/prior.csv"
    shell:
        "python make_uninformative_prior.py {input} {output}"


